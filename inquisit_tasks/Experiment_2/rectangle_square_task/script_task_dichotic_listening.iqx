<usermanual>
___________________________________________________________________________________________________________________	

										*Dichotic Listenting Task*
										- used by the Behavioural Laterality Battery-
___________________________________________________________________________________________________________________	

Script Author: Katja Borchert, Ph.D. (katjab@millisecond.com) for Millisecond Software, LLC
Date: 01-19-2021
last updated:  02-21-2022 by K. Borchert (katjab@millisecond.com) for Millisecond Software, LLC

Script Copyright © 02-21-2022 Millisecond Software

___________________________________________________________________________________________________________________
BACKGROUND INFO 	
___________________________________________________________________________________________________________________	

This script implements a Dichotic Listening Task similar to the one used by the Behavioural Laterality Battery
(Parker et al, 2020). 
This task assesses the lateralisation of language processing.

References:

//Behavioural Laterality Battery:
Adam J. Parker , Zoe V. J. Woodhead , Paul A. Thompson & Dorothy V. M.
Bishop (2020): Assessing the reliability of an online behavioural laterality battery: A pre-registered
study, Laterality, DOI: 10.1080/1357650X.2020.1859526
To link to this article: https://doi.org/10.1080/1357650X.2020.1859526

https://gorilla.sc/openmaterials/104636


//Dichotic Listening Tasks:

Bless, J. J., Westerhausen, R., Arciuli, J., Kompus, K., Gudmundsen, M., & Hugdahl, K. (2013). 
Right on all Occasions?” – On the Feasibility of Laterality Research Using a Smartphone Dichotic Listening Application.
Frontiers in Psychology, 4, 42.
https://doi.org/10.3389/fpsyg.2013.00042

Hugdahl, K., & Andersson, L. (1986). 
The “Forced-Attention Paradigm” in Dichotic Listening to CV-Syllables: A Comparison Between Adults and Children.
Cortex, 22, 417-432.
https://doi.org/10.1016/S0010-9452(86)80005-3 

___________________________________________________________________________________________________________________
TASK DESCRIPTION	
___________________________________________________________________________________________________________________	

Participants hear two syllables (selected from: ba, da, ga, ka, pa, ta) through their left and right ear
and are asked to indicate which syllable their heard best.

___________________________________________________________________________________________________________________	
DURATION 
___________________________________________________________________________________________________________________	
the default set-up of the script takes appr. 5 minutes to complete

___________________________________________________________________________________________________________________	
DATA FILE INFORMATION 
___________________________________________________________________________________________________________________		
The default data stored in the data files are:

(1) Raw data file: 'blb_dichoticlistening_raw*.iqdat' (a separate file for each participant)*


build:								The specific Inquisit version used (the 'build') that was run
computer.platform:					the platform the script was run on (win/mac/ios/android)
date, time: 						date and time script was run 
subject, group: 					with the current subject/groupnumber
session:							with the current session id

blockcode, blocknum:				the name and number of the current block (built-in Inquisit variable)
trialcode, trialnum: 				the name and number of the currently recorded trial (built-in Inquisit variable)
										Note: trialnum is a built-in Inquisit variable; it counts all trials run; even those
										that do not store data to the data file. 
																			
index:								itemnumber of the selected soundfile 
soundfile:							the selected soundfile 
DL_leftSound:							the sound played through the left ear 
DL_rightSound:							the sound played through the right ear 

DL_dualSound:							1 = the left sound is different than the right sound
									0 = the same sound is played in both ears
																		
response:							the participant's response (selected response button)

DL_choice:								left/right/other (= the selected ear; if an incorrect sound was selected it says 'other')
									(in case of mono sounds: if the correct sound was selected it will always say 'left')

correct:							accuracy of response: 	
									1 = correct response (either the left or right sound was selected)
									0 = otherwise (a different sound was selected)
									
latency: 							the response latency (in ms); measured from: onset of sound
									Note: the soundfiles are ~500ms long. 
									Any latencies smaller than that => participant responded before the entire soundfile was played


(2) Summary data file: 'blb_dichoticlistening_summary*.iqdat' (a separate file for each participant)*

inquisit.version: 						Inquisit version run
computer.platform:					the platform the script was run on (win/mac/ios/android)
startdate:							date script was run
starttime:							time script was started
subjectid:							assigned subject id number
groupid:							assigned group id number
sessionid:							assigned session id number
elapsedtime:						time it took to run script (in ms); measured from onset to offset of script
completed:							0 = script was not completed (prematurely aborted); 
									1 = script was completed (all conditions run)
														
* separate data files: to change to one data file for all participants (on Inquisit Lab only), go to section
"DATA" and follow further instructions

___________________________________________________________________________________________________________________	
EXPERIMENTAL SET-UP 
___________________________________________________________________________________________________________________	

(1) Intro + Demo
- all 6 mono sounds are introduced, order is determined randomly
- each sound can be played multiple times

(2) Practice: 9 trials
- all 6 mono sounds + (da-ba, ga-ta, ka-pa); order is randomly determined
=> each sound is played equally often during practice

(3) 4 test blocks (see Editable Parameters) of 36 trials
- order of trials is randomly determined for each block
___________________________________________________________________________________________________________________
STIMULI
___________________________________________________________________________________________________________________

the stimuli are provided by the Behavioural Laterality Battery (Parker et al 2020)
and can be downloaded at:
https://osf.io/4bqe6/

Note: if used, please cite reference articles for Dichotic Listening Task as given above.
___________________________________________________________________________________________________________________	
INSTRUCTIONS 
___________________________________________________________________________________________________________________	

provided by Millisecond Software. The instructions are based on the ones used by 
the Behavioural Laterality Battery (Parker et al 2020).
The instructions can edited in the provided htm-files.

___________________________________________________________________________________________________________________	
EDITABLE CODE 
___________________________________________________________________________________________________________________	
check below for (relatively) easily editable parameters, stimuli, instructions etc. 
Keep in mind that you can use this script as a template and therefore always "mess" with the entire code 
to further customize your experiment.

The parameters you can change are:
</usermanual>


**************************************************************************************************************
**************************************************************************************************************
	EDITABLE PARAMETERS: change editable parameters here
**************************************************************************************************************
**************************************************************************************************************

<parameters>
/ fixationHeight = 10%				//the proportional height of the fixation cross (default: 10%)
/fixationDuration = 500				//the duration (in ms) of the fixation cross (default: 500ms)

/numberTestBlocks = 4				//the number of test blocks to run (Note: each test block runs 36 trials)
</parameters>

**************************************************************************************************************
**************************************************************************************************************
	EDITABLE STIMULI
**************************************************************************************************************
**************************************************************************************************************

the stimuli are provided by the Behavioural Laterality Battery (Parker et al 2020)
and can be downloaded at:
https://osf.io/4bqe6/
<item DL_soundfiles>
/1="blb_dichoticlistening_ba-ba.mp3"
/2="blb_dichoticlistening_ba-da.mp3"
/3="blb_dichoticlistening_ba-ga.mp3"
/4="blb_dichoticlistening_ba-ka.mp3"
/5="blb_dichoticlistening_ba-pa.mp3"
/6="blb_dichoticlistening_ba-ta.mp3"
/7="blb_dichoticlistening_da-ba.mp3"
/8="blb_dichoticlistening_da-da.mp3"
/9="blb_dichoticlistening_da-ga.mp3"
/10="blb_dichoticlistening_da-ka.mp3"
/11="blb_dichoticlistening_da-pa.mp3"
/12="blb_dichoticlistening_da-ta.mp3"
/13="blb_dichoticlistening_ga-ba.mp3"
/14="blb_dichoticlistening_ga-da.mp3"
/15="blb_dichoticlistening_ga-ga.mp3"
/16="blb_dichoticlistening_ga-ka.mp3"
/17="blb_dichoticlistening_ga-pa.mp3"
/18="blb_dichoticlistening_ga-ta.mp3"
/19="blb_dichoticlistening_ka-ba.mp3"
/20="blb_dichoticlistening_ka-da.mp3"
/21="blb_dichoticlistening_ka-ga.mp3"
/22="blb_dichoticlistening_ka-ka.mp3"
/23="blb_dichoticlistening_ka-pa.mp3"
/24="blb_dichoticlistening_ka-ta.mp3"
/25="blb_dichoticlistening_pa-ba.mp3"
/26="blb_dichoticlistening_pa-da.mp3"
/27="blb_dichoticlistening_pa-ga.mp3"
/28="blb_dichoticlistening_pa-ka.mp3"
/29="blb_dichoticlistening_pa-pa.mp3"
/30="blb_dichoticlistening_pa-ta.mp3"
/31="blb_dichoticlistening_ta-ba.mp3"
/32="blb_dichoticlistening_ta-da.mp3"
/33="blb_dichoticlistening_ta-ga.mp3"
/34="blb_dichoticlistening_ta-ka.mp3"
/35="blb_dichoticlistening_ta-pa.mp3"
/36="blb_dichoticlistening_ta-ta.mp3"
</item>

<item DL_soundfiles_sounds>
/1="ba-ba"
/2="ba-da"
/3="ba-ga"
/4="ba-ka"
/5="ba-pa"
/6="ba-ta"
/7="da-ba"
/8="da-da"
/9="da-ga"
/10="da-ka"
/11="da-pa"
/12="da-ta"
/13="ga-ba"
/14="ga-da"
/15="ga-ga"
/16="ga-ka"
/17="ga-pa"
/18="ga-ta"
/19="ka-ba"
/20="ka-da"
/21="ka-ga"
/22="ka-ka"
/23="ka-pa"
/24="ka-ta"
/25="pa-ba"
/26="pa-da"
/27="pa-ga"
/28="pa-ka"
/29="pa-pa"
/30="pa-ta"
/31="ta-ba"
/32="ta-da"
/33="ta-ga"
/34="ta-ka"
/35="ta-pa"
/36="ta-ta"
</item>

<list testSoundfiles_itemnumbers>
/ poolsize = 36
/ replace = false
</list>

//stores the soundfiles used for the practice trials (6 uni + 3 additional ones)
<list practiceSoundfiles_itemnumbers>
/ items = (1, 7, 8, 15, 18, 22, 23, 29, 36)
/ replace = false
</list>

<item demoSoundfiles>
/1="blb_dichoticlistening_ba-ba.mp3"
/2="blb_dichoticlistening_da-da.mp3"
/3="blb_dichoticlistening_ga-ga.mp3"
/4="blb_dichoticlistening_ka-ka.mp3"
/5="blb_dichoticlistening_pa-pa.mp3"
/6="blb_dichoticlistening_ta-ta.mp3"
</item>

<item demoSoundfiles_sounds>
/1="ba"
/2="da"
/3="ga"
/4="ka"
/5="pa"
/6="ta"
</item>

<list demoSoundfiles_itemnumbers>
/ poolsize = 6
/ replace = false
/ resetinterval = 0
</list>

**************************************************************************************************************
**************************************************************************************************************
	EDITABLE INSTRUCTIONS: change instructions here
**************************************************************************************************************
**************************************************************************************************************

********************************************************************************
DL_generalIntro
********************************************************************************

<html DL_generalIntro>
/ items = ("blb_dichoticlistening_instruct_intro.htm")
/ size = (100%, 80%)
/ position = (50%, 40%)
</html>

<button DL_continueButton>
/ caption = "NEXT"
/ fontstyle = ("Arial", 5%, false, false, false, false, 5, 1)
/ size = (20%, 8%)
/ position = (50%, 90%)
/ erase = false
</button>

<trial DL_generalIntro>
/ inputdevice = mouse
/ stimulusframes = [1 = clearscreen, DL_generalIntro, DL_continueButton]
/ validresponse = (DL_continueButton)
/ recorddata = false
</trial>

********************************************************************************
Demo
********************************************************************************

<html DL_demoIntro>
/ items = ("blb_dichoticlistening_instruct_demo.htm")
/ size = (100%, 80%)
/ position = (50%, 40%)
</html>

<trial DL_demoIntro>
/ inputdevice = mouse
/ stimulusframes = [1 = clearscreen, DL_demoIntro, DL_continueButton]
/ validresponse = (DL_continueButton)
/ recorddata = false
</trial>

<button DL_playButton>
/ caption = "► PLAY"
/ fontstyle = ("Arial", 5%, false, false, false, false, 5, 1)
/ size = (20%, 8%)
/ position = (50%, 50%)
/ erase = false
</button>

<button reDL_playButton>
/ caption = "► REPLAY"
/ fontstyle = ("Arial", 5%, false, false, false, false, 5, 1)
/ size = (20%, 8%)
/ position = (50%, 50%)
/ erase = false
</button>

<text demoInstructions>
/ items = ("When you press play, you will hear:")
/ fontstyle = ("Arial", 5%, false, false, false, false, 5, 1)
/ position = (50%, 20%)
/ vjustify = center
/ erase = false
</text>

<text demoSound>
/ items = demoSoundfiles_sounds
/ select = values.DL_index
/ fontstyle = ("Courier New", 8%, true, false, false, false, 5, 1)
/ position = (50%, 35%)
/ vjustify = center
/ erase = false
</text>

<sound DL_soundfile_demo>
/ items = demoSoundfiles
/ select = values.DL_index
/ playthrough = true
</sound>


<trial DL_demoStart>
/ inputdevice = mouse
/ ontrialbegin = [
	values.DL_index = list.demoSoundfiles_itemnumbers.nextindex;
	button.DL_playButton.skip = false;
	button.reDL_playButton.skip = true;
]
/ trialduration = 0
/ branch = [
	return trial.demo;
]
/ recorddata = false
</trial>

<trial demo>
/ inputdevice = mouse
/ stimulusframes = [1 = clearscreen, demoInstructions, demoSound, DL_continueButton, DL_playButton, reDL_playButton]
/ validresponse = (DL_continueButton, DL_playButton)
/ ontrialend = [
	if (trial.demo.response == "DL_playButton"){
		button.DL_playButton.skip = true;
		button.reDL_playButton.skip = false;
	};
]
/ branch = [
	if (trial.demo.response == "DL_playButton"){
		return trial.playSound_demo;
	}
]
/ recorddata = false
</trial>

<trial playSound_demo>
/ inputdevice = mouse
/ stimulusframes = [1 = DL_soundfile_demo, reDL_playButton]
/ trialduration = 0
/ ontrialend = [
	values.DL_soundfile = sound.DL_soundfile_demo.currentitem;
	values.DL_leftSound = expressions.DL_leftSound;
	values.DL_rightSound = expressions.DL_rightSound;	
	values.DL_dualSound = 0;
]
/ branch = [
	return trial.demo;
]
/ recorddata = false
</trial>

********************************************************************************
Practice
********************************************************************************

<html DL_practiceStart>
/ items = ("blb_dichoticlistening_instruct_practice.htm")
/ size = (100%, 80%)
/ position = (50%, 40%)
</html>

<trial DL_practiceStart>
/ inputdevice = mouse
/ stimulusframes = [1 = clearscreen, DL_practiceStart, DL_continueButton]
/ validresponse = (DL_continueButton)
/ recorddata = false
</trial>

<button ba>
/ caption = "ba"
/ fontstyle = ("Arial", 3%, false, false, false, false, 5, 1)
/ size = (10%, 10%)
/ position = (12.5%, 80%)
/ erase = false
</button>

<button da>
/ caption = "da"
/ fontstyle = ("Arial", 3%, false, false, false, false, 5, 1)
/ size = (10%, 10%)
/ position = (27.5%, 80%)
/ erase = false
</button>

<button ga>
/ caption = "ga"
/ fontstyle = ("Arial", 3%, false, false, false, false, 5, 1)
/ size = (10%, 10%)
/ position = (42.5%, 80%)
/ erase = false
</button>

<button ka>
/ caption = "ka"
/ fontstyle = ("Arial", 3%, false, false, false, false, 5, 1)
/ size = (10%, 10%)
/ position = (57.5%, 80%)
/ erase = false
</button>

<button pa>
/ caption = "pa"
/ fontstyle = ("Arial", 3%, false, false, false, false, 5, 1)
/ size = (10%, 10%)
/ position = (72.5%, 80%)
/ erase = false
</button>

<button ta>
/ caption = "ta"
/ fontstyle = ("Arial", 3%, false, false, false, false, 5, 1)
/ size = (10%, 10%)
/ position = (87.5%, 80%)
/ erase = false
</button>

********************************************************************************
Test
********************************************************************************

<html DL_testStart>
/ items = ("blb_dichoticlistening_instruct_test.htm")
/ size = (100%, 80%)
/ position = (50%, 40%)
</html>

<trial DL_testStart>
/ inputdevice = mouse
/ stimulusframes = [1 = clearscreen, DL_testStart, DL_continueButton]
/ validresponse = (DL_continueButton)
/ recorddata = false
</trial>

********************************************************************************
Break
********************************************************************************

<html DL_break>
/ items = ("blb_dichoticlistening_instruct_break.htm")
/ position = (50%, 40%)
/ size = (100%, 80%)
</html>

<trial DL_break>
/ inputdevice = mouse
/ skip = [
	values.DL_testblockCounter == parameters.numberTestBlocks;
]

/ stimulusframes = [1 = clearscreen, DL_break, DL_continueButton]
/ validresponse = (DL_continueButton)
/ recorddata = false
</trial>

********************************************************************************
Finish
********************************************************************************

<text DL_finish>
/ items = ("Please press NEXT to continue.")
/ fontstyle = ("Arial", 8%, true, false, false, false, 5, 1)
/ position = (50%, 50%)
/ size = (80%, 100%)
/ vjustify = center
/ valign = center
/ halign = center
</text>

<button DL_exitbutton>
/ caption = "NEXT"
/ fontstyle = ("Arial", 3%, false, false, false, false, 5, 1)
/ position = (50%, 80%)
/ size = (30%, 8%)
/ valign = center
/ halign = center
</button>

<trial DL_finish>
/ inputdevice = mouse
/ stimulusframes = [1 = clearscreen, DL_finish, DL_exitButton]
/ validresponse = (DL_exitButton)
/ recorddata = false
</trial>

**************************************************************************************************************
				!!!REMAINING CODE: Customize after careful consideration only!!!
**************************************************************************************************************


**************************************************************************************************************
**************************************************************************************************************
	DEFAULTS
**************************************************************************************************************
**************************************************************************************************************

**************************************************************************************************************
**************************************************************************************************************
	DATA
**************************************************************************************************************
**************************************************************************************************************

**************************************************************************************************************
**************************************************************************************************************
	VALUES: automatically updated
**************************************************************************************************************
**************************************************************************************************************

<values>
/ DL_soundfile = ""
/ sounds = ""
/ DL_index = 1
/ DL_leftSound = ""
/ DL_rightSound = ""
/ DL_dualSound = 0
/ DL_choice = ""

/ DL_count_corrLeft = 0
/ DL_count_corrRight = 0

/ DL_testblockCounter = 0
</values>

**************************************************************************************************************
**************************************************************************************************************
	EXPRESSIONS
**************************************************************************************************************
**************************************************************************************************************

<expressions>
/DL_leftSound = substring(values.DL_soundfile, 22, 2) //"blb_dichoticlistening_[b]a-da.mp3" [b] is at index22, ba = 2 characters
/DL_rightSound = substring(values.DL_soundfile, 25, 2)//"blb_dichoticlistening_ba-[d]a.mp3" [d] is at index25, da = 2 characters
</expressions>

<expressions>

/DL_propCorrect = list.DL_ACC.mean

/DL_propCorrect_dual = list.DL_ACC_dual.mean
/DL_count_dual = list.DL_ACC_dual.itemcount
/DL_propCorrect_mono = list.DL_ACC_mono.mean
/DL_count_mono = list.DL_ACC_mono.itemcount
</expressions>

**************************************************************************************************************
**************************************************************************************************************
	STIMULI
**************************************************************************************************************
**************************************************************************************************************

<text fixation>
/ items = ("+")
/ fontstyle = ("Arial",parameters.fixationHeight, false, false, false, false, 5, 1)
/ position = (50%, 50%)
/ erase = false
</text>

<text fixation_eraser>
/ items = ("+")
/ fontstyle = ("Arial",parameters.fixationHeight, false, false, false, false, 5, 1)
/ position = (50%, 50%)
/ erase = false
/ txcolor = white
</text>

<sound DL_soundfile>
/ items = DL_soundFiles
/ select = values.DL_index
/ playthrough = false
</sound>

**************************************************************************************************************
**************************************************************************************************************
	LISTS	
**************************************************************************************************************
**************************************************************************************************************


*************************************************
Data Lists: used for descriptive statistics
store correct latencies/accuracy data
fill up during runtime
*************************************************

Note: list stores 1 = correct response; 0 = incorrect response for each relevant trial
any response coded as an error is automatically coded as 0
<list DL_ACC>
</list>

Note: list stores 1 = correct response; 0 = incorrect response for each relevant trial
any response coded as an error is automatically coded as 0
<list DL_ACC_mono>
</list>

Note: list stores 1 = correct response; 0 = incorrect response for each relevant trial
any response coded as an error is automatically coded as 0
<list DL_ACC_dual>
</list>

Note: list stores 1 = correct response; 0 = incorrect response for each relevant trial
any response coded as an error is automatically coded as 0
<list dual_left>
</list>

Note: list stores 1 = correct response; 0 = incorrect response for each relevant trial
any response coded as an error is automatically coded as 0
<list dual_right>
</list>

Note: list stores the latency of correct responses for each relevant trial
<list RT>
</list>

**************************************************************************************************************
**************************************************************************************************************
	TRIALS 	
**************************************************************************************************************
**************************************************************************************************************

<trial DL_practice>
/ inputdevice = mouse
/ ontrialbegin = [
	values.DL_index = list.practiceSoundfiles_itemnumbers.nextvalue;
	values.DL_soundfile = item.DL_soundfiles.item(values.DL_index);
	values.DL_leftSound = expressions.DL_leftSound;
	values.DL_rightSound = expressions.DL_rightSound;
	if (values.DL_leftSound == values.DL_rightSound){
		values.DL_dualSound = 0;
	} else {
		values.DL_dualSound = 1;
	};
	trial.DL_practice.insertstimulustime(text.fixation_eraser, parameters.fixationDuration);	
	trial.DL_practice.insertstimulustime(sound.DL_soundfile, parameters.fixationDuration);
]
/ stimulusframes = [1 = clearscreen, fixation, ba, da, ga, ka, pa, ta]
/ validresponse = (ba, da, ga, ka, pa, ta)
/ beginresponsetime = parameters.fixationDuration
/ iscorrectresponse = [
	return ((values.DL_dualSound == 1 && (trial.DL_practice.response == values.DL_rightSound || trial.DL_practice.response == values.DL_leftSound)) ||
	(values.DL_dualSound == 0 && trial.DL_practice.response == values.DL_rightSound))
]
/ ontrialend = [
	trial.DL_practice.resetstimulusframes();
	
	if (trial.DL_practice.response == values.DL_leftSound){
		values.DL_choice = "left";
	} else if (trial.DL_practice.response == values.DL_rightSound){
		values.DL_choice = "right";
	} else {
		values.DL_choice = "other";
	};	
]
</trial>


<trial DL_test>
/ inputdevice = mouse
/ ontrialbegin = [
	values.DL_index = list.testSoundfiles_itemnumbers.nextindex;
	values.DL_soundfile = item.DL_soundfiles.item(values.DL_index);
	values.DL_leftSound = expressions.DL_leftSound;
	values.DL_rightSound = expressions.DL_rightSound;
	if (values.DL_leftSound == values.DL_rightSound){
		values.DL_dualSound = 0;
	} else {
		values.DL_dualSound = 1;
	};
	trial.DL_test.insertstimulustime(text.fixation_eraser, parameters.fixationDuration);		
	trial.DL_test.insertstimulustime(sound.DL_soundfile, parameters.fixationDuration);
]
/ stimulusframes = [1 = clearscreen, fixation, ba, da, ga, ka, pa, ta]
/ validresponse = (ba, da, ga, ka, pa, ta)
/ beginresponsetime = parameters.fixationDuration
/ iscorrectresponse = [
	return ((values.DL_dualSound == 1 && (trial.DL_test.response == values.DL_rightSound || trial.DL_test.response == values.DL_leftSound)) ||
	(values.DL_dualSound == 0 && trial.DL_test.response == values.DL_rightSound))
]
/ ontrialend = [
	trial.DL_test.resetstimulusframes();
	
	if (trial.DL_test.response == values.DL_leftSound){
		values.DL_choice = "left";
	} else if (trial.DL_test.response == values.DL_rightSound){
		values.DL_choice = "right";
	} else {
		values.DL_choice = "other";
	};
		
	//summary variables:
	list.DL_ACC.appenditem(trial.DL_test.correct);
	if (values.DL_dualSound == 1){
		list.DL_ACC_dual.appenditem(trial.DL_test.correct);
	} else {
		list.DL_ACC_mono.appenditem(trial.DL_test.correct);
	};
	
	if (values.DL_dualSound == 1){
		if (values.DL_choice == "left"){
			values.DL_count_corrLeft += 1;
		} else if (values.DL_choice == "right"){
			values.DL_count_corrRight += 1;
		};
	};
]
</trial>


**************************************************************************************************************
**************************************************************************************************************
	BLOCKS
**************************************************************************************************************
**************************************************************************************************************

<block DL_intro>
/ trials = [
	1 = DL_generalIntro;
	2 = DL_demoIntro;
	3-8 = DL_demoStart;
]
</block>

<block DL_practice>
/ trials = [
	1 = DL_practiceStart;
	2-10 = DL_practice;
]
</block>

<block DL_testStart>
/trials = [
	1 = DL_testStart;
]
</block>


<block DL_test>
/ onblockbegin = [
	values.DL_testblockCounter += 1;
]
/ trials = [
	1-36 = DL_test;
	37 = DL_break;
]
/ branch = [
	if (values.DL_testblockCounter < parameters.numberTestBlocks){
		return block.DL_test;
	};
]
</block>


<block DL_finish>
/ trials = [
	1 = DL_finish;
]
</block>

**************************************************************************************************************
**************************************************************************************************************
	EXPERIMENT 
**************************************************************************************************************
**************************************************************************************************************

**************************************************************************************************************
												End of File
**************************************************************************************************************